#spring.datasource.url=${JDBC_DATABASE_URL}
#spring.datasource.username=${JDBC_DATABASE_USERNAME}
#spring.datasource.password=${JDBC_DATABASE_PASSWORD}
#spring.jpa.show-sql=false
#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=create

#server.port=8081
##data soruce config
#spring.datasource.url=jdbc:mysql://localhost:3306/devicemanagement?useSSL=false&useUnicode=true&characterEncoding=utf-8
#spring.datasource.username=root
#spring.datasource.password=
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#
##hibernate config
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
## ==============================================================
## = Spring Security / Queries for AuthenticationManagerBuilder  
## ==============================================================
#spring.queries.users-query=select email, password, active from user where email=?
#spring.queries.roles-query=select u.email, r.role_name from user u inner join user_role ur on(u.id=ur.user_id) inner join role r on(ur.role_id=r.id) where u.email=?
#
#spring.servlet.multipart.max-file-size=5MB
#spring.servlet.multipart.max-request-size=5MB
#upload.path=./assets/img/


#server.contextPath=/user-portal
#server.port = 8083
#spring.datasource.url=jdbc:mysql://localhost:3306/duannhadat
#spring.datasource.username=root
#spring.datasource.password=
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
#spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy



spring.datasource.url=${JDBC_DATABASE_URL}
spring.datasource.username=${JDBC_DATABASE_USERNAME}
spring.datasource.password=${JDBC_DATABASE_PASSWORD}
spring.jpa.show-sql=false
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update



## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB
